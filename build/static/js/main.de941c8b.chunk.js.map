{"version":3,"sources":["firebase.js","components/AddTaskForm.js","components/EditTaskForm.js","components/TaskColumnHeader.js","dragdrop.js","components/TaskColumnItems.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","AddTaskForm","triggeredForm","closeForm","onSubmit","e","preventDefault","type","document","getElementById","typeDropdown","value","taskId","uuidv4","collection","doc","set","id","title","target","description","labels","uiDesignLabel","checked","marketingLabel","growthExperimentLabel","catch","error","alert","name","style","display","EditTaskForm","hiddenId","update","hiddenType","onClick","parentElement","delete","TaskColumnHeader","count","svg","className","icon","color","marginRight","allowDrop","classList","contains","dataTransfer","dropEffect","dragStart","setData","dropIt","sourceId","getData","sourceIdEl","sourceIdParentEl","targetEl","targetParentEl","getAttribute","key","openEditTaskForm","TaskColumnItems","tasks","openForm","a","map","el","draggable","onDragStart","onDrop","onDragOver","faCog","charAt","toUpperCase","slice","App","useState","setTasks","setTriggeredForm","openedCount","selectedCount","runningCount","evaluatingCount","liveCount","useEffect","onSnapshot","querySnapshot","forEach","push","data","i","length","console","log","currentTarget","form","editForm","reset","faPlusCircle","faSearch","placeholder","onChange","trim","includes","items","faLightbulb","faMapSigns","faQuestionCircle","faCheckCircle","render","columnWidth","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.de941c8b.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDCvvwpLsE7dr3lU4Ehxb6un1h-LNbw_fI\",\r\n    authDomain: \"task-manager-8e28f.firebaseapp.com\",\r\n    databaseURL: \"https://task-manager-8e28f.firebaseio.com\",\r\n    projectId: \"task-manager-8e28f\",\r\n    storageBucket: \"task-manager-8e28f.appspot.com\",\r\n    messagingSenderId: \"80493297086\",\r\n    appId: \"1:80493297086:web:46b2e630260afcab9acdef\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const database = firebase.firestore();\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { database } from '../firebase';\r\n\r\nexport function AddTaskForm({ triggeredForm, closeForm }) {\r\n\r\n    function sendTask(e) {\r\n        e.preventDefault();\r\n        let type = '';\r\n        switch (triggeredForm) {\r\n            case 'submitOpenedTask':\r\n                type = 'opened';\r\n                break;\r\n            case 'submitSelectedTask':\r\n                type = 'selected';\r\n                break;\r\n            case 'submitRunningTask':\r\n                type = 'running';\r\n                break;\r\n            case 'submitEvaluatingTask':\r\n                type = 'evaluating';\r\n                break;\r\n            case 'submitLiveTask':\r\n                type = 'live';\r\n                break;\r\n            case 'menu':\r\n                type = document.getElementById('addTaskForm').typeDropdown.value;\r\n                break;\r\n        }\r\n        const taskId = uuidv4();\r\n\r\n        database.collection(\"tasks\").doc(taskId).set({\r\n            id: taskId,\r\n            type: type,\r\n            title: e.target.title.value,\r\n            description: e.target.description.value,\r\n            labels: [\r\n                e.target.uiDesignLabel.checked ? \"UI Design\" : \"\",\r\n                e.target.marketingLabel.checked ? \"Marketing\" : \"\",\r\n                e.target.growthExperimentLabel.checked ? \"Growth Experiment\" : \"\"]\r\n        })\r\n            .catch(function(error) {\r\n                alert(\"Error adding document: \", error);\r\n            });\r\n        closeForm();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={sendTask} id='addTaskForm'>\r\n            <label>\r\n                Title: <input type='text' name='title' />\r\n            </label>\r\n            <label>\r\n                Description: <input type='text' name='description' />\r\n            </label>\r\n            <label>\r\n                UI Design <input name=\"uiDesignLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <label>\r\n                Marketing <input name=\"marketingLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <label>\r\n                Growth Experiment <input name=\"growthExperimentLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <select name='typeDropdown' style={{ display: 'none' }}>\r\n                <option>opened</option>\r\n                <option>selected</option>\r\n                <option>running</option>\r\n                <option>evaluating</option>\r\n                <option>live</option>\r\n            </select>\r\n            <button type='submit'>Add</button>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { database } from '../firebase';\r\n\r\nexport function EditTaskForm({ closeForm }) {\r\n    function editTask(e) {\r\n        e.preventDefault();\r\n        database.collection('tasks').doc(e.target.hiddenId.value).update({\r\n            description: e.target.description.value, id: e.target.hiddenId.value, labels: [e.target.growthExperimentLabel.checked, e.target.marketingLabel.checked, e.target.uiDesignLabel.checked], title: e.target.title.value, type: e.target.hiddenType.value\r\n        });\r\n        closeForm();\r\n    }\r\n    function deleteTask(e) {\r\n        database.collection(\"tasks\").doc(e.target.parentElement.hiddenId.value).delete();\r\n    }\r\n    return (\r\n        <form onSubmit={editTask} id='editTaskForm'>\r\n            <input type='hidden' id='hiddenId' name=\"hiddenId\" />\r\n            <input type='hidden' id='hiddenType' name=\"hiddenType\" />\r\n            <label>\r\n                Title: <input type='text' name='title' />\r\n            </label>\r\n            <label>\r\n                Description: <input type='text' name='description' />\r\n            </label>\r\n            <label>\r\n                UI Design <input name=\"uiDesignLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <label>\r\n                Marketing <input name=\"marketingLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <label>\r\n                Growth Experiment <input name=\"growthExperimentLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <button type='submit'>Edit</button>\r\n            <button onClick={deleteTask}>Delete</button>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport function TaskColumnHeader({ type, count, svg }) {\r\n    return (\r\n        <div className={`tasks__header tasks__header--${type}`}>\r\n            <div>\r\n                <FontAwesomeIcon icon={svg} color='white' style={{ marginRight: '10px' }} />\r\n                <h1 className='tasks__title'>{type}</h1>\r\n            </div>\r\n            <span className='tasks__count'>{count}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { database } from './firebase';\r\n\r\nexport function allowDrop(e) {\r\n    e.preventDefault();\r\n    if (!e.target.classList.contains(\"tasks__items\") && !e.target.classList.contains(\"item\"))\r\n        e.dataTransfer.dropEffect = \"none\";\r\n    else\r\n        e.dataTransfer.dropEffect = \"all\";\r\n}\r\nexport function dragStart(e) {\r\n    e.dataTransfer.setData(\"text/html\", e.target.id);\r\n}\r\nexport function dropIt(e) {\r\n    e.preventDefault();\r\n    let sourceId = e.dataTransfer.getData(\"text/html\");\r\n    let sourceIdEl = document.getElementById(sourceId);\r\n    let sourceIdParentEl = sourceIdEl.parentElement;\r\n    let targetEl = document.getElementById(e.target.id)\r\n    let targetParentEl = targetEl.parentElement;\r\n\r\n    if (targetParentEl.id !== sourceIdParentEl.id) {\r\n        if (targetEl.className === sourceIdEl.className) {\r\n            database.collection('tasks').doc(sourceId).update({\r\n                type: targetParentEl.getAttribute('id')\r\n            });\r\n        } else {\r\n            database.collection('tasks').doc(sourceId).update({\r\n                type: targetEl.getAttribute('id')\r\n            });\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { dropIt, allowDrop, dragStart } from '../dragdrop';\r\n\r\nconst labels = {\r\n    \"Growth Experiment\": <span key={1} className='tasks__label tasks__label--red'>Growth Experiment</span>,\r\n    \"Marketing\": <span key={2} className='tasks__label tasks__label--purple'>Marketing</span>,\r\n    \"UI Design\": <span key={3} className='tasks__label tasks__label--green'>UI Design</span>\r\n}\r\n\r\nfunction openEditTaskForm(id, type, title, description, uiDesignLabel, marketingLabel, growthExperimentLabel) {\r\n    return function() {\r\n        document.getElementById('overlay').style.display = 'block';\r\n        document.getElementById('editTaskForm').style.display = 'flex';\r\n        document.getElementById('editTaskForm').hiddenId.value = id;\r\n        document.getElementById('editTaskForm').hiddenType.value = type;\r\n        document.getElementById('editTaskForm').title.value = title;\r\n        document.getElementById('editTaskForm').description.value = description;\r\n        document.getElementById('editTaskForm').growthExperimentLabel.checked = growthExperimentLabel ? 'checked' : '';\r\n        document.getElementById('editTaskForm').marketingLabel.checked = marketingLabel ? 'checked' : '';\r\n        document.getElementById('editTaskForm').uiDesignLabel.checked = uiDesignLabel ? 'checked' : '';\r\n    }\r\n\r\n}\r\n\r\nexport function TaskColumnItems({ type, tasks, openForm }) {\r\n    let a = tasks.map(el => {\r\n        if (el.type === type) {\r\n            return <li key={el.id}\r\n                id={el.id}\r\n                className=\"item\"\r\n                draggable=\"true\"\r\n                onDragStart={dragStart}\r\n                onDrop={dropIt}\r\n                onDragOver={allowDrop}>\r\n                <button onClick={openEditTaskForm(el.id, el.type, el.title, el.description, el.labels[0], el.labels[1], el.labels[2])}>\r\n                    <FontAwesomeIcon icon={faCog} color='black' />\r\n                </button>\r\n                <h1>{el.title}</h1>\r\n                <p>{el.description}</p>\r\n                {<div className='tasks__labels'>{el.labels.map((el) => el && labels[el])}</div>}\r\n            </li>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ul className={`tasks__items tasks__items--${type}`} id={type} onDrop={dropIt} onDragOver={allowDrop}>\r\n            {a}\r\n            <li className=\"submitButtonContainer\">\r\n                <button onClick={openForm}\r\n                    id={`submit${type.charAt(0).toUpperCase() + type.slice(1)}Task`}>\r\n                    <span /><span />\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { Masonry } from 'masonic';\nimport { database } from './firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faSearch, faMapSigns, faLightbulb, faCog, faQuestionCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { AddTaskForm } from './components/AddTaskForm';\nimport { EditTaskForm } from './components/EditTaskForm';\nimport { TaskColumnHeader } from './components/TaskColumnHeader';\nimport { TaskColumnItems } from './components/TaskColumnItems';\nimport './App.scss';\n\nfunction App() {\n    let [tasks, setTasks] = useState([]);\n    let [triggeredForm, setTriggeredForm] = useState('')\n\n    let openedCount = 0, selectedCount = 0, runningCount = 0, evaluatingCount = 0, liveCount = 0;\n\n    useEffect(() => {\n        database.collection(\"tasks\")\n            .onSnapshot(function(querySnapshot) {\n                let tasks = [];\n\n                querySnapshot.forEach(function(doc) {\n                    tasks.push(doc.data());\n                });\n\n                setTasks(tasks)\n            });\n    }, []);\n\n    for (let i = 0; i < tasks.length; i++) {\n        tasks[i].type === 'opened' && openedCount++;\n        tasks[i].type === 'selected' && selectedCount++;\n        tasks[i].type === 'running' && runningCount++;\n        tasks[i].type === 'evaluating' && evaluatingCount++;\n        tasks[i].type === 'live' && liveCount++;\n    }\n\n    function openForm(e) {\n        document.getElementById('overlay').style.display = 'block';\n        document.getElementById('addTaskForm').style.display = 'flex';\n        console.log(e.currentTarget.parentElement.classList)\n        if (e.currentTarget.parentElement.classList.contains('menu')) {\n            document.getElementById('addTaskForm').typeDropdown.style.display = 'block';\n            setTriggeredForm(e.currentTarget.parentElement.className)\n        } else {\n            document.getElementById('addTaskForm').typeDropdown.style.display = 'none';\n            setTriggeredForm(e.currentTarget.id)\n        }\n    }\n\n    function closeForm() {\n        const form = document.getElementById('addTaskForm');\n        const editForm = document.getElementById('editTaskForm');\n        form.reset();\n        editForm.reset();\n        form.style.display = 'none';\n        editForm.style.display = 'none';\n        document.getElementById('overlay').style.display = 'none';\n    }\n\n    function search() {\n        database.collection(\"tasks\")\n            .onSnapshot(function(querySnapshot) {\n                let tasks = [];\n                if (document.getElementById('searchInput').value.trim() !== \"\") {\n                    querySnapshot.forEach((el) => {\n                        if (el.data().title.includes(document.getElementById('searchInput').value.trim()) ||\n                            el.data().description.includes(document.getElementById('searchInput').value.trim()) ||\n                            el.data().labels.includes(document.getElementById('searchInput').value.trim())) {\n                            tasks.push(el.data())\n                        }\n                    })\n                } else {\n                    querySnapshot.forEach(function(doc) {\n                        tasks.push(doc.data());\n                    });\n                }\n                setTasks(tasks)\n            });\n    }\n\n    const MasonryCard = ({ data: { type, count, svg, tasks, openForm } }) => (\n        <div className='tasks'>\n            <TaskColumnHeader type={type} count={count} svg={svg} />\n            <TaskColumnItems type={type} tasks={tasks} openForm={openForm} />\n        </div>\n    )\n\n    return (\n        <div className=\"App\">\n            <div id='overlay' onClick={closeForm}></div>\n            <AddTaskForm triggeredForm={triggeredForm} closeForm={closeForm} />\n            <EditTaskForm closeForm={closeForm} />\n            <div className='menu'>\n                <FontAwesomeIcon icon={faPlusCircle} color='#00b8ff' style={{ marginRight: '10px' }} onClick={openForm} />\n                <FontAwesomeIcon icon={faSearch} color='#00b8ff' />\n                <input type='text' id='searchInput' placeholder='Search...' onChange={search} />\n            </div>\n            <div className='taskTypes'>\n                <Masonry items={[{\r\n                    type: 'opened',\n                    count: openedCount,\n                    svg: faLightbulb,\n                    tasks: tasks,\n                    openForm: openForm\r\n                },\n                {\r\n                    type: 'selected',\n                    count: selectedCount,\n                    svg: faMapSigns,\n                    tasks: tasks,\n                    openForm: openForm\r\n                },\n                {\r\n                    type: 'running',\n                    count: runningCount,\n                    svg: faCog,\n                    tasks: tasks,\n                    openForm: openForm\r\n                },\n                {\r\n                    type: 'evaluating',\n                    count: evaluatingCount,\n                    svg: faQuestionCircle,\n                    tasks: tasks,\n                    openForm: openForm\r\n                },\n                {\r\n                    type: 'live',\n                    count: liveCount,\n                    svg: faCheckCircle,\n                    tasks: tasks,\n                    openForm: openForm\r\n                }]} render={MasonryCard} columnWidth={250} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}