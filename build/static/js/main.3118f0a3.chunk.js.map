{"version":3,"sources":["firebase.js","components/AddTaskForm.js","components/EditTaskForm.js","components/TaskColumnHeader.js","dragdrop.js","components/TaskColumnItems.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","AddTaskForm","triggeredForm","closeForm","onSubmit","e","preventDefault","type","random","Math","floor","collection","doc","toString","set","id","title","target","value","description","labels","uiDesignLabel","checked","marketingLabel","growthExperimentLabel","catch","error","alert","name","EditTaskForm","hiddenId","update","hiddenType","TaskColumnHeader","count","svg","className","icon","color","style","marginRight","allowDrop","classList","contains","dataTransfer","dropEffect","dragStart","setData","dropIt","sourceId","getData","sourceIdEl","document","getElementById","sourceIdParentEl","parentElement","targetEl","targetParentEl","getAttribute","holderText","textContent","openEditTaskForm","display","TaskColumnItems","tasks","openForm","a","map","el","key","draggable","onDragStart","onDrop","onDragOver","onClick","faCog","charAt","toUpperCase","slice","App","useState","setTasks","setTriggeredForm","openedCount","selectedCount","runningCount","evaluatingCount","liveCount","useEffect","onSnapshot","querySnapshot","forEach","push","data","i","length","currentTarget","form","editForm","reset","faPlusCircle","faSearch","placeholder","onChange","trim","includes","faLightbulb","faMapSigns","faQuestionCircle","faCheckCircle","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3118f0a3.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDCvvwpLsE7dr3lU4Ehxb6un1h-LNbw_fI\",\r\n    authDomain: \"task-manager-8e28f.firebaseapp.com\",\r\n    databaseURL: \"https://task-manager-8e28f.firebaseio.com\",\r\n    projectId: \"task-manager-8e28f\",\r\n    storageBucket: \"task-manager-8e28f.appspot.com\",\r\n    messagingSenderId: \"80493297086\",\r\n    appId: \"1:80493297086:web:46b2e630260afcab9acdef\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const database = firebase.firestore();\r\n","import React from 'react';\r\nimport { database } from '../firebase';\r\n\r\nexport function AddTaskForm({ triggeredForm, closeForm }) {\r\n\r\n    function sendTask(e) {\r\n        e.preventDefault();\r\n        let type = '';\r\n        switch (triggeredForm) {\r\n            case 'submitOpenedTask':\r\n                type = 'opened';\r\n                break;\r\n            case 'submitSelectedTask':\r\n                type = 'selected';\r\n                break;\r\n            case 'submitRunningTask':\r\n                type = 'running';\r\n                break;\r\n            case 'submitEvaluatingTask':\r\n                type = 'evaluating';\r\n                break;\r\n            case 'submitLiveTask':\r\n                type = 'live';\r\n                break;\r\n        }\r\n        const random = Math.floor(Math.random() * Math.floor(100000))\r\n\r\n        database.collection(\"tasks\").doc(random.toString()).set({\r\n            id: random,\r\n            type: type,\r\n            title: e.target.title.value,\r\n            description: e.target.description.value,\r\n            labels: [\r\n                e.target.uiDesignLabel.checked ? \"UI Design\" : \"\",\r\n                e.target.marketingLabel.checked ? \"Marketing\" : \"\",\r\n                e.target.growthExperimentLabel.checked ? \"Growth Experiment\" : \"\"]\r\n        })\r\n            .catch(function(error) {\r\n                alert(\"Error adding document: \", error);\r\n            });\r\n        closeForm();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={sendTask} id='addTaskForm'>\r\n            <label>\r\n                Title: <input type='text' name='title' />\r\n            </label>\r\n            <label>\r\n                Description: <input type='text' name='description' />\r\n            </label>\r\n            <label>\r\n                UI Design <input name=\"uiDesignLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <label>\r\n                Marketing <input name=\"marketingLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <label>\r\n                Growth Experiment <input name=\"growthExperimentLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <button type='submit'>Add</button>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { database } from '../firebase';\r\n\r\nexport function EditTaskForm({ closeForm }) {\r\n    function editTask(e) {\r\n        e.preventDefault();\r\n        database.collection('tasks').doc(e.target.hiddenId.value).update({\r\n            description: e.target.description.value, id: e.target.hiddenId.value, labels: [e.target.growthExperimentLabel.checked, e.target.marketingLabel.checked, e.target.uiDesignLabel.checked], title: e.target.title.value, type: e.target.hiddenType.value\r\n        });\r\n        closeForm();\r\n    }\r\n    return (\r\n        <form onSubmit={editTask} id='editTaskForm'>\r\n            <input type='hidden' id='hiddenId' name=\"hiddenId\" />\r\n            <input type='hidden' id='hiddenType' name=\"hiddenType\" />\r\n            <label>\r\n                Title: <input type='text' name='title' />\r\n            </label>\r\n            <label>\r\n                Description: <input type='text' name='description' />\r\n            </label>\r\n            <label>\r\n                UI Design <input name=\"uiDesignLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <label>\r\n                Marketing <input name=\"marketingLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <label>\r\n                Growth Experiment <input name=\"growthExperimentLabel\" type=\"checkbox\" />\r\n            </label>\r\n            <button type='submit'>Edit</button>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport function TaskColumnHeader({ type, count, svg }) {\r\n    return (\r\n        <div className={`tasks__header tasks__header--${type}`}>\r\n            <div>\r\n                <FontAwesomeIcon icon={svg} color='white' style={{ marginRight: '10px' }} />\r\n                <h1 className='tasks__title'>{type}</h1>\r\n            </div>\r\n            <span className='tasks__count'>{count}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { database } from './firebase';\r\n\r\nexport function allowDrop(e) {\r\n    e.preventDefault();\r\n    if (!e.target.classList.contains(\"tasks__items\") && !e.target.classList.contains(\"item\"))\r\n        e.dataTransfer.dropEffect = \"none\";\r\n    else\r\n        e.dataTransfer.dropEffect = \"all\";\r\n}\r\nexport function dragStart(e) {\r\n    e.dataTransfer.setData(\"text/html\", e.target.id);\r\n}\r\nexport function dropIt(e) {\r\n    e.preventDefault();\r\n    let sourceId = e.dataTransfer.getData(\"text/html\");\r\n    let sourceIdEl = document.getElementById(sourceId);\r\n    let sourceIdParentEl = sourceIdEl.parentElement;\r\n    let targetEl = document.getElementById(e.target.id)\r\n    let targetParentEl = targetEl.parentElement;\r\n\r\n    if (targetParentEl.id !== sourceIdParentEl.id) {\r\n        if (targetEl.className === sourceIdEl.className) {\r\n            database.collection('tasks').doc(sourceId).update({\r\n                type: targetParentEl.getAttribute('id')\r\n            });\r\n        } else {\r\n            database.collection('tasks').doc(sourceId).update({\r\n                type: targetEl.getAttribute('id')\r\n            });\r\n        }\r\n    } else {\r\n        let holder = targetEl;\r\n        let holderText = holder.textContent;\r\n        targetEl.textContent = sourceIdEl.textContent;\r\n        sourceIdEl.textContent = holderText;\r\n        holderText = '';\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { dropIt, allowDrop, dragStart } from '../dragdrop';\r\n\r\nconst labels = {\r\n    \"Growth Experiment\": <span className='tasks__label tasks__label--red'>Growth Experiment</span>,\r\n    \"Marketing\": <span className='tasks__label tasks__label--purple'>Marketing</span>,\r\n    \"UI Design\": <span className='tasks__label tasks__label--green'>UI Design</span>\r\n}\r\n\r\nfunction openEditTaskForm(id, type, title, description, uiDesignLabel, marketingLabel, growthExperimentLabel) {\r\n    return function() {\r\n        document.getElementById('overlay').style.display = 'block';\r\n        document.getElementById('editTaskForm').style.display = 'flex';\r\n        document.getElementById('editTaskForm').hiddenId.value = id;\r\n        document.getElementById('editTaskForm').hiddenType.value = type;\r\n        document.getElementById('editTaskForm').title.value = title;\r\n        document.getElementById('editTaskForm').description.value = description;\r\n        document.getElementById('editTaskForm').growthExperimentLabel.checked = growthExperimentLabel ? 'checked' : '';\r\n        document.getElementById('editTaskForm').marketingLabel.checked = marketingLabel ? 'checked' : '';\r\n        document.getElementById('editTaskForm').uiDesignLabel.checked = uiDesignLabel ? 'checked' : '';\r\n    }\r\n\r\n}\r\n\r\nexport function TaskColumnItems({ type, tasks, openForm }) {\r\n    let a = tasks.map(el => {\r\n        if (el.type === type) {\r\n            return <li key={el.id}\r\n                id={el.id}\r\n                className=\"item\"\r\n                draggable=\"true\"\r\n                onDragStart={dragStart}\r\n                onDrop={dropIt}\r\n                onDragOver={allowDrop}>\r\n                <button onClick={openEditTaskForm(el.id, el.type, el.title, el.description, el.labels[0], el.labels[1], el.labels[2])}>\r\n                    <FontAwesomeIcon icon={faCog} color='black' />\r\n                </button>\r\n                <h1>{el.title}</h1>\r\n                <p>{el.description}</p>\r\n                {<div className='tasks__labels'>{el.labels.map((el) => el && labels[el])}</div>}\r\n            </li>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ul className={`tasks__items tasks__items--${type}`} id={type} onDrop={dropIt} onDragOver={allowDrop}>\r\n            {a}\r\n            <li className=\"submitButtonContainer\">\r\n                <button onClick={openForm}\r\n                    id={`submit${type.charAt(0).toUpperCase() + type.slice(1)}Task`}>\r\n                    <span /><span />\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { database } from './firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faSearch, faMapSigns, faLightbulb, faCog, faQuestionCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { AddTaskForm } from './components/AddTaskForm';\nimport { EditTaskForm } from './components/EditTaskForm';\nimport { TaskColumnHeader } from './components/TaskColumnHeader';\nimport { TaskColumnItems } from './components/TaskColumnItems';\nimport './App.scss';\n\nfunction App() {\n    let [tasks, setTasks] = useState([]);\n    let [triggeredForm, setTriggeredForm] = useState('')\n\n    let openedCount = 0, selectedCount = 0, runningCount = 0, evaluatingCount = 0, liveCount = 0;\n\n    useEffect(() => {\n        database.collection(\"tasks\")\n            .onSnapshot(function(querySnapshot) {\n                let tasks = [];\n\n                querySnapshot.forEach(function(doc) {\n                    tasks.push(doc.data());\n                });\n\n                setTasks(tasks)\n            });\n    }, []);\n\n    for (let i = 0; i < tasks.length; i++) {\n        tasks[i].type === 'opened' && openedCount++;\n        tasks[i].type === 'selected' && selectedCount++;\n        tasks[i].type === 'running' && runningCount++;\n        tasks[i].type === 'evaluating' && evaluatingCount++;\n        tasks[i].type === 'live' && liveCount++;\n    }\n\n    function openForm(e) {\n        document.getElementById('overlay').style.display = 'block';\n        document.getElementById('addTaskForm').style.display = 'flex';\n        setTriggeredForm(e.currentTarget.id)\n    }\n\n    function closeForm() {\n        const form = document.getElementById('addTaskForm');\n        const editForm = document.getElementById('editTaskForm');\n        form.reset();\n        editForm.reset();\n        form.style.display = 'none';\n        editForm.style.display = 'none';\n        document.getElementById('overlay').style.display = 'none';\n    }\n\n    function search() {\n        database.collection(\"tasks\")\n            .onSnapshot(function(querySnapshot) {\n                let tasks = [];\n                if (document.getElementById('searchInput').value.trim() !== \"\") {\n                    querySnapshot.forEach((el) => {\n                        if (el.data().title.includes(document.getElementById('searchInput').value.trim()) ||\n                            el.data().description.includes(document.getElementById('searchInput').value.trim()) ||\n                            el.data().labels.includes(document.getElementById('searchInput').value.trim())) {\n                            tasks.push(el.data())\n                        }\n                    })\n                } else {\n                    querySnapshot.forEach(function(doc) {\n                        tasks.push(doc.data());\n                    });\n                }\n                setTasks(tasks)\n            });\n    }\n\n    return (\n        <div className=\"App\">\n            <div id='overlay' onClick={closeForm}></div>\n            <AddTaskForm triggeredForm={triggeredForm} closeForm={closeForm} />\n            <EditTaskForm closeForm={closeForm} />\n            <div className='menu'>\n                <FontAwesomeIcon icon={faPlusCircle} color='#00b8ff' style={{ marginRight: '10px' }} onClick={openForm} />\n                <FontAwesomeIcon icon={faSearch} color='#00b8ff' />\n                <input type='text' id='searchInput' placeholder='Search...' onChange={search} />\n            </div>\n            <div className='taskTypes'>\n                <div className='tasks'>\n                    <TaskColumnHeader type='opened' count={openedCount} svg={faLightbulb} />\n                    <TaskColumnItems type='opened' tasks={tasks} openForm={openForm} />\n                </div>\n                <div className='tasks'>\n                    <TaskColumnHeader type='selected' count={selectedCount} svg={faMapSigns} />\n                    <TaskColumnItems type='selected' tasks={tasks} openForm={openForm} />\n                </div>\n                <div className='tasks'>\n                    <TaskColumnHeader type='running' count={runningCount} svg={faCog} />\n                    <TaskColumnItems type='running' tasks={tasks} openForm={openForm} />\n                </div>\n                <div className='tasks'>\n                    <TaskColumnHeader type='evaluating' count={evaluatingCount} svg={faQuestionCircle} />\n                    <TaskColumnItems type='evaluating' tasks={tasks} openForm={openForm} />\n                </div>\n                <div className='tasks'>\n                    <TaskColumnHeader type='live' count={liveCount} svg={faCheckCircle} />\n                    <TaskColumnItems type='live' tasks={tasks} openForm={openForm} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}